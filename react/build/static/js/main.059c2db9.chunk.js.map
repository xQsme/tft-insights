{"version":3,"sources":["components/special_table.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["descendingComparator","a","b","orderBy","newA","newB","split","parseFloat","ignored","EnhancedTableHead","props","classes","order","onRequestSort","headCells","TableHead","TableRow","map","headCell","TableCell","key","id","align","padding","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","border","clip","height","margin","overflow","position","top","SpecialTable","rows","forEach","row","elements","element","push","array","headers","obj","header","shift","createData","new","numeric","primaryKey","orderCol","orderDir","React","useState","setOrder","setOrderBy","selected","setSelected","Paper","TableContainer","Table","aria-labelledby","size","aria-label","numSelected","length","onSelectAllClick","target","checked","newSelecteds","n","name","rowCount","TableBody","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","callback","Ticket","tabIndex","App","requestUnits","item","value","state","axios","get","server","then","response","setState","data","requested","catch","error","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleChange","stuff","units","totalMatches","this","autoHide","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","Tabs","onChange","indicatorColor","textColor","centered","Tab","Button","variant","color","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"4YAoBA,SAASA,EAAqBC,EAAGC,EAAGC,GAClC,IAAIC,EAAOH,EAAEE,GACTE,EAAOH,EAAEC,GACb,IACEC,EAAOA,EAAKE,MAAM,KAAK,GACvBD,EAAOA,EAAKC,MAAM,KAAK,GACvBF,EAAOG,WAAWH,GAClBC,EAAOE,WAAWF,GAClB,MAAMG,IAGR,OAAIH,EAAOD,GACD,EAENC,EAAOD,EACF,EAEF,EAmBT,SAASK,EAAkBC,GAAQ,IACzBC,EAAsDD,EAAtDC,QAASC,EAA6CF,EAA7CE,MAAOT,EAAsCO,EAAtCP,QAASU,EAA6BH,EAA7BG,cAAeC,EAAcJ,EAAdI,UAKhD,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGF,EAAUG,KAAI,SAACC,GAAD,OACb,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAASG,GACdC,MAAM,SACNC,QAASL,EAASM,eAAiB,OAAS,UAC5CC,cAAetB,IAAYe,EAASG,IAAKT,GAEzC,kBAACc,EAAA,EAAD,CACEC,OAAQxB,IAAYe,EAASG,GAC7BO,UAAWzB,IAAYe,EAASG,GAAKT,EAAQ,MAC7CiB,SAjBeC,EAiBYZ,EAASG,GAjBR,SAACU,GACvClB,EAAckB,EAAOD,MAkBVZ,EAASc,MACT7B,IAAYe,EAASG,GACpB,0BAAMY,UAAWtB,EAAQuB,gBACZ,SAAVtB,EAAmB,oBAAsB,oBAE1C,OAxBU,IAACkB,OA2C7B,IAAMK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPE,aAAcJ,EAAMK,QAAQ,IAE9BC,MAAO,GAEPT,eAAgB,CACdU,OAAQ,EACRC,KAAM,gBACNC,OAAQ,EACRC,QAAS,EACTC,SAAU,SACVzB,QAAS,EACT0B,SAAU,WACVC,IAAK,GACLX,MAAO,OAII,SAASY,EAAazC,GACjC,IAAM0C,EAAO,GACb1C,EAAM0C,KAAKC,SAAQ,SAAAC,GACf,IAAMC,EAAW,GACjB7C,EAAM6C,SAASF,SAAQ,SAAAG,GACnBD,EAASE,KAAKH,EAAIE,OAEtBJ,EAAKK,KAvHb,SAAoBC,EAAOC,GACvB,IAAMC,EAAM,GAId,OAHED,EAAQN,SAAQ,SAAAQ,GACZD,EAAIC,GAAUH,EAAMI,WAEnBF,EAkHSG,CAAWR,EAAU7C,EAAMiD,QAASL,EAAIjC,GAAIiC,EAAIU,SAE9D,IAAMlD,EAAY,GAClBJ,EAAMiD,QAAQN,SAAQ,SAAAQ,GAClB/C,EAAU2C,KAAK,CAAEpC,GAAIwC,EAAQI,SAAS,EAAOzC,gBAAgB,EAAOQ,MAAO6B,OAXvC,IAahCK,EAAmCxD,EAAnCwD,WAAYC,EAAuBzD,EAAvByD,SAAUC,EAAa1D,EAAb0D,SAC1BzD,EAAUwB,IAd0B,EAehBkC,IAAMC,SAASF,GAfC,mBAenCxD,EAfmC,KAe5B2D,EAf4B,OAgBZF,IAAMC,SAASH,GAhBH,mBAgBnChE,EAhBmC,KAgB1BqE,EAhB0B,OAiBVH,IAAMC,SAAS,IAjBL,mBAiBnCG,EAjBmC,KAiBzBC,EAjByB,KAkC1C,OACE,yBAAKzC,UAAWtB,EAAQ2B,MACtB,kBAACqC,EAAA,EAAD,CAAO1C,UAAWtB,EAAQ6B,OACxB,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE5C,UAAWtB,EAAQgC,MACnBmC,kBAAgB,aAChBC,KAAK,SACLC,aAAW,kBAEX,kBAACvE,EAAD,CACEE,QAASA,EACTsE,YAAaR,EAASS,OACtBtE,MAAOA,EACPT,QAASA,EACTgF,iBAxBiB,SAACpD,GAC5B,GAAIA,EAAMqD,OAAOC,QAAjB,CACE,IAAMC,EAAelC,EAAKnC,KAAI,SAACsE,GAAD,OAAOA,EAAEC,QACvCd,EAAYY,QAGdZ,EAAY,KAmBF7D,cA/Bc,SAACkB,EAAOD,GAEhCyC,EADcpE,IAAY2B,GAAsB,QAAVlB,EACrB,OAAS,OAC1B4D,EAAW1C,IA6BD2D,SAAUrC,EAAK8B,OACfpE,UAAWA,IAEb,kBAAC4E,EAAA,EAAD,KApIZ,SAAoBhC,EAAOiC,GACzB,IAAMC,EAAiBlC,EAAMzC,KAAI,SAAC4E,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAAC9F,EAAGC,GACtB,IAAMU,EAAQ+E,EAAW1F,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVU,EAAoBA,EACjBX,EAAE,GAAKC,EAAE,MAEX0F,EAAe3E,KAAI,SAAC4E,GAAD,OAAQA,EAAG,MA8HxBG,CAAW5C,EA3I1B,SAAuBxC,EAAOT,GAC5B,MAAiB,SAAVS,EACH,SAACX,EAAGC,GAAJ,OAAUF,EAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,EAAqBC,EAAGC,EAAGC,IAwIZ8F,CAAcrF,EAAOT,IACpCc,KAAI,SAACqC,EAAKwC,GACT,OACE,kBAAC9E,EAAA,EAAD,CACEa,QAAS,kBAAMnB,EAAMwF,SAAS5C,EAAIY,GAAaZ,EAAI6C,SACnDC,UAAW,EACXhF,IAAKkC,EAAIY,IAGHxD,EAAMiD,QAAQ1C,KAAI,SAAA4C,GAChB,OAAQ,kBAAC1C,EAAA,EAAD,CAAWG,MAAM,SAASF,IAAKyC,GAASP,EAAIO,gB,qBCvEnEwC,G,wDAjGb,WAAY3F,GAAgB,IAAD,8BACzB,cAAMA,IAcR4F,aAAe,SAACC,GAAe,IACrBC,EAAU,EAAKC,MAAfD,MACRE,IAAMC,IAAIC,oCAA0BL,GAAcC,IAAQK,MAAK,SAAAC,GAC7D,EAAKC,SAAL,eAAkBD,EAASE,KAA3B,CAAiCC,WAAW,QAC3CC,OAAM,SAAAC,GACP,EAAKJ,SAAS,CAACI,OAAO,IACtBC,YAAM,gCAA4B,CAChCnE,SAAU,YACVoE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,QA5BW,EAiC3BC,aAAe,SAACC,EAAYtB,GAC1B,EAAKQ,SAAS,CAACP,MAAOD,EAAMU,WAAW,IACvC,EAAKX,aAAaC,IAjClB,EAAKE,MAAQ,CACTQ,WAAW,EACXa,MAAO,GACPC,aAAc,EACdvB,MAAO,EACPW,OAAO,GAPc,E,gEAYzBa,KAAK1B,kBAAaqB,K,+BA0BV,IAAD,SACkDK,KAAKvB,MAAtDQ,EADD,EACCA,UAAWa,EADZ,EACYA,MAAOC,EADnB,EACmBA,aAAcvB,EADjC,EACiCA,MAAOW,EADxC,EACwCA,MAE/C,OACE,yBAAKlF,UAAU,OACb,kBAAC,IAAD,MACA,kBAAC,aAAD,CACEgG,UAAQ,EACRhG,UAAU,YACViG,sBAAuB,SAAAxH,GAAK,OAAI,yCAASA,EAAT,CAAgBuB,UAAU,uBAC1DkG,oBAAqB,SAAAzH,GAAK,OAAI,yCAASA,EAAT,CAAgBuB,UAAU,qBACxDmG,sBAAuB,SAAA1H,GAAK,OAAI,yCAASA,EAAT,CAAgBuB,UAAU,uBAC1DoG,oBAAqB,SAAA3H,GAAK,OAAI,yCAASA,EAAT,CAAgBuB,UAAU,sBAE1D,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,UAAd,gBACA,kBAACqG,EAAA,EAAD,CACE9B,MAAOA,EACP+B,SAAUP,KAAKJ,aACfY,eAAe,UACfC,UAAU,UACVC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAK3G,MAAM,OACX,kBAAC2G,EAAA,EAAD,CAAK3G,MAAM,OACX,kBAAC2G,EAAA,EAAD,CAAK3G,MAAM,QAEZmF,EACC,yBAAKlF,UAAU,cACb,kBAAC2G,EAAA,EAAD,CAAQ3G,UAAU,WAAW4G,QAAQ,YAAYC,MAAM,UAAUjH,QAAS,WAAO,EAAKkF,SAAS,CAACI,OAAO,EAAOF,WAAW,IAAS,EAAKX,kBAAaqB,KAApJ,iBACA,uBAAG1F,UAAU,QAAb,8DAGF,oCACIgF,EAGA,oCACE,kBAAC9D,EAAD,CACEC,KAAM0E,EACNnE,QAAS,CAAC,OAAQ,YAAc,SAChCJ,SAAU,CAAC,OAAQ,MAAO,OAC1BW,WAAY,OACZC,SAAS,YACTC,SAAS,OACTqB,SAAU,KACZ,uBAAGxD,UAAU,QAAb,uBAAyC8F,EAAzC,iFAXF,yBAAK9F,UAAU,UAAS,yBAAKA,UAAU,cAAa,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,wC,GA1E/H8G,cCREC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDkIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEd5C,OAAM,SAAAC,GACL4C,QAAQ5C,MAAMA,EAAM6C,c","file":"static/js/main.059c2db9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nfunction createData(array, headers) {\n    const obj = {};\n    headers.forEach(header => {\n        obj[header] = array.shift();\n    })\n  return obj;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  let newA = a[orderBy];\n  let newB = b[orderBy];\n  try{\n    newA = newA.split('%')[0];\n    newB = newB.split('%')[0];\n    newA = parseFloat(newA);\n    newB = parseFloat(newB);\n  } catch(ignored) {\n\n  }\n  if (newB < newA) {\n    return -1;\n  }\n  if (newB > newA) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort, headCells } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function SpecialTable(props) {\n    const rows = [];\n    props.rows.forEach(row => {\n        const elements = [];\n        props.elements.forEach(element => {\n            elements.push(row[element]);\n        });\n        rows.push(createData(elements, props.headers, row.id, row.new));\n    });\n    const headCells = [];\n    props.headers.forEach(header => {\n        headCells.push({ id: header, numeric: false, disablePadding: false, label: header});\n    });\n    const { primaryKey, orderCol, orderDir } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(orderDir);\n  const [orderBy, setOrderBy] = React.useState(orderCol);\n  const [selected, setSelected] = React.useState([]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headCells}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      onClick={() => props.callback(row[primaryKey], row.Ticket)}\n                      tabIndex={-1}\n                      key={row[primaryKey]}\n                    >\n                        {\n                            props.headers.map(header => {\n                              return (<TableCell align=\"center\" key={header}>{row[header]}</TableCell>);\n                            })\n                        }\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n}","import React, {Component} from 'react';\nimport server from './constants/server';\nimport './assets/styles/main.scss';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport axios from 'axios';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SpecialTable from './components/special_table';\nimport Button from '@material-ui/core/Button';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface AppState {\n  requested: boolean,\n  units: any,\n  totalMatches: number,\n  value: number,\n  error: boolean,\n}\n\nclass App extends Component <{}, AppState> {\n  constructor(props: object) {\n    super(props);\n    this.state = {\n        requested: false,\n        units: [],\n        totalMatches: 1,\n        value: 0,\n        error: false,\n    };\n  }\n\n  componentDidMount() { \n    this.requestUnits(undefined);\n  }\n\n  requestUnits = (item: any) => {\n    const { value } = this.state;\n    axios.get(server + '/tft/units/' + (item ? item : value)).then(response => {\n      this.setState({...response.data, requested: true});\n    }).catch(error => {\n      this.setState({error: true});\n      toast('❌ Request Limit Reached!', {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    });\n  }\n\n  handleChange = (stuff: any, item: number) => {\n    this.setState({value: item, requested: false});\n    this.requestUnits(item);\n  }\n\n  render() { \n    const { requested, units, totalMatches, value, error } = this.state;\n    \n    return(\n      <div className=\"App\">\n        <ToastContainer />\n        <Scrollbars\n          autoHide\n          className=\"scrollbar\"\n          renderTrackHorizontal={props => <div {...props} className=\"track-horizontal\" />}\n          renderTrackVertical={props => <div {...props} className=\"track-vertical\" />}\n          renderThumbHorizontal={props => <div {...props} className=\"thumb-horizontal\" />}\n          renderThumbVertical={props => <div {...props} className=\"thumb-vertical\" />}\n        >\n        <div className=\"app-container\">\n          <h3 className=\"center\">TFT Insights</h3>\n          <Tabs\n            value={value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"EU\" />\n            <Tab label=\"NA\" />\n            <Tab label=\"KR\" />\n          </Tabs>\n          {error ? (\n            <div className=\"full-width\">\n              <Button className=\"btn-main\" variant=\"contained\" color=\"primary\" onClick={() => {this.setState({error: false, requested: false}); this.requestUnits(undefined);}}>Retry Request</Button>\n              <p className=\"note\">Request limit reached, please wait a bit before retrying.</p>\n            </div>\n          ) : (\n            <>\n              {!requested ? (\n                <div className=\"center\"><div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>\n              ) : (\n                <>\n                  <SpecialTable \n                    rows={units} \n                    headers={['Unit', '1st Place' , 'Top 4']}\n                    elements={['unit', 'win', 'top']}\n                    primaryKey={\"Unit\"}\n                    orderCol=\"1st Place\"\n                    orderDir=\"desc\"\n                    rowCount={15}/>\n                  <p className=\"note\">Data recovered from {totalMatches} of the latest matches of the top Challenger players of the selected region.</p>\n                </>\n              )}\n            </>\n          )}\n\n        </div>\n        </Scrollbars>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}