{"ast":null,"code":"var _jsxFileName = \"/home/xqsme/Git/tft-insights/react/src/components/special_table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Search from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\n\nfunction createData(array, headers) {\n  const obj = {};\n  headers.forEach(header => {\n    obj[header] = array.shift();\n  });\n  return obj;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  let newA = a[orderBy];\n  let newB = b[orderBy];\n\n  try {\n    newA = newA.split('%')[0];\n    newB = newB.split('%')[0];\n    newA = parseFloat(newA);\n    newB = parseFloat(newA);\n  } catch (ignored) {}\n\n  if (newB < newA) {\n    return -1;\n  }\n\n  if (newB > newA) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction filter(search, rows) {\n  if (search === '') {\n    return rows;\n  }\n\n  const newList = [];\n  rows.forEach(row => {\n    for (let key of Object.keys(row)) {\n      if (('' + row[key]).toLowerCase().includes(search.toLowerCase())) {\n        newList.push(row);\n        break;\n      }\n    }\n  });\n  return newList;\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort,\n    headCells\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: \"center\",\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, headCell.label, orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {},\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function SpecialTable(props) {\n  const rows = [];\n  props.rows.forEach(row => {\n    const elements = [];\n    props.elements.forEach(element => {\n      elements.push(row[element]);\n    });\n    rows.push(createData(elements, props.headers, row.id, row.new));\n  });\n  const headCells = [];\n  props.headers.forEach(header => {\n    headCells.push({\n      id: header,\n      numeric: false,\n      disablePadding: false,\n      label: header\n    });\n  });\n  const {\n    primaryKey,\n    orderCol,\n    orderDir\n  } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(orderDir);\n  const [orderBy, setOrderBy] = React.useState(orderCol);\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.rowCount);\n  const clickable = props.clickable;\n  const [search, setSearch] = React.useState('');\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    headCells: headCells,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, stableSort(filter(search, rows), getComparator(order, orderBy)).map((row, index) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      className: clickable ? 'clickable' : '',\n      onClick: () => props.callback(row[primaryKey], row.Ticket),\n      tabIndex: -1,\n      key: row[primaryKey],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, props.headers.map(header => {\n      return /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        key: header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 39\n        }\n      }, row[header]);\n    }));\n  }))))));\n}","map":{"version":3,"sources":["/home/xqsme/Git/tft-insights/react/src/components/special_table.js"],"names":["React","PropTypes","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Paper","Toolbar","Search","TextField","createData","array","headers","obj","forEach","header","shift","descendingComparator","a","b","orderBy","newA","newB","split","parseFloat","ignored","getComparator","order","stableSort","comparator","stabilizedThis","map","el","index","sort","filter","search","rows","newList","row","key","Object","keys","toLowerCase","includes","push","EnhancedTableHead","props","classes","onRequestSort","headCells","createSortHandler","property","event","headCell","id","disablePadding","label","visuallyHidden","propTypes","object","isRequired","numSelected","number","func","onSelectAllClick","oneOf","string","rowCount","useStyles","theme","root","width","paper","marginBottom","spacing","table","border","clip","height","margin","overflow","padding","position","top","SpecialTable","elements","element","new","numeric","primaryKey","orderCol","orderDir","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","clickable","setSearch","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","length","callback","Ticket"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Search from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\n\nfunction createData(array, headers) {\n    const obj = {};\n    headers.forEach(header => {\n        obj[header] = array.shift();\n    })\n  return obj;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  let newA = a[orderBy];\n  let newB = b[orderBy];\n  try{\n    newA = newA.split('%')[0];\n    newB = newB.split('%')[0];\n    newA = parseFloat(newA);\n    newB = parseFloat(newA);\n  } catch(ignored) {\n\n  }\n  if (newB < newA) {\n    return -1;\n  }\n  if (newB > newA) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction filter(search, rows){\n  if(search === '') {\n    return rows;\n  }\n  const newList = [];\n  rows.forEach(row => {\n    for(let key of Object.keys(row)) {\n      if(('' + row[key]).toLowerCase().includes(search.toLowerCase())) {\n        newList.push(row);\n        break;\n      }\n    }\n  });\n  return newList;\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort, headCells } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function SpecialTable(props) {\n    const rows = [];\n    props.rows.forEach(row => {\n        const elements = [];\n        props.elements.forEach(element => {\n            elements.push(row[element]);\n        });\n        rows.push(createData(elements, props.headers, row.id, row.new));\n    });\n    const headCells = [];\n    props.headers.forEach(header => {\n        headCells.push({ id: header, numeric: false, disablePadding: false, label: header});\n    });\n    const { primaryKey, orderCol, orderDir } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(orderDir);\n  const [orderBy, setOrderBy] = React.useState(orderCol);\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.rowCount);\n  const clickable = props.clickable;\n  const [search, setSearch] = React.useState('');\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headCells}\n            />\n            <TableBody>\n              {stableSort(filter(search, rows), getComparator(order, orderBy))\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      className={clickable ? 'clickable' : ''}\n                      onClick={() => props.callback(row[primaryKey], row.Ticket)}\n                      tabIndex={-1}\n                      key={row[primaryKey]}\n                    >\n                        {\n                            props.headers.map(header => {\n                              return (<TableCell align=\"center\" key={header}>{row[header]}</TableCell>);\n                            })\n                        }\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}